generator client {
  provider = "prisma-client-js"
}

generator markdown {
  provider = "prisma-markdown"
  output   = "./ERD.md"
  title    = "solibyeoli ERD"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  name          String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt
  is_admin      Boolean  @default(false)
  is_del        Boolean  @default(false)
  user_email    String   @unique(map: "unique_constraint_name")
  user_password String
  Scores        Score[]

  @@map("users")
}

model Score {
  id        Int      @id @default(autoincrement())
  score     Int
  user_id   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  is_del    Boolean  @default(false)
  User      User     @relation(fields: [user_id], references: [id])

  @@index([user_id], map: "score_user_id_fkey")
  @@map("score")
}

model Step {
  id        Int      @id @default(autoincrement())
  explain   String
  grade     Int
  seq_id    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  is_del    Boolean  @default(false)
  krWords   KrWord[]

  @@map("steps")
}

model KrWord {
  id                Int       @id @default(autoincrement())
  kr_word           String
  pronunciation     String
  example           String
  step_id           Int
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @default(now()) @updatedAt
  is_del            Boolean   @default(false)
  pronunciation_url String
  Antonyms          Antonym[]
  Step              Step      @relation(fields: [step_id], references: [id])
  Synonyms          Synonym[]

  @@index([step_id], map: "kr_words_step_id_fkey")
  @@map("kr_words")
}

model Synonym {
  id            Int      @id @default(autoincrement())
  kr_word       String
  pronunciation String
  example       String
  kr_word_id    Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt
  is_del        Boolean  @default(false)
  KrWord        KrWord   @relation(fields: [kr_word_id], references: [id])

  @@index([kr_word_id], map: "synonyms_kr_word_id_fkey")
  @@map("synonyms")
}

model Antonym {
  id            Int      @id @default(autoincrement())
  kr_word       String
  pronunciation String
  example       String
  kr_word_id    Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt
  is_del        Boolean  @default(false)
  KrWord        KrWord   @relation(fields: [kr_word_id], references: [id])

  @@index([kr_word_id], map: "antonyms_kr_word_id_fkey")
  @@map("antonyms")
}
